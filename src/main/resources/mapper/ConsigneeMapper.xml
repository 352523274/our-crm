<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy25.sm.mapper.sell.ConsigneeMapper">
  <resultMap id="BaseResultMap" type="com.qy25.sm.vo.ConsigneeVo">
    <id column="goodId" jdbcType="BIGINT" property="id"/>
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
    <result column="shopping_price" jdbcType="DOUBLE" property="shoppingPrice"/>
    <association property="consignee" javaType="com.qy25.sm.entity.sell.Consignee">
      <result column="id" jdbcType="BIGINT" property="id" />
      <result column="consignee_name" jdbcType="VARCHAR" property="consigneeName" />
      <result column="vip_account_number" jdbcType="VARCHAR" property="vipAccountNumber" />
      <result column="consignee_phone" jdbcType="BIGINT" property="consigneePhone" />
      <result column="consignee_cellPhone" jdbcType="BIGINT" property="consigneeCellphone" />
      <result column="consignee_zipCode" jdbcType="BIGINT" property="consigneeZipcode" />
      <result column="consignee_address" jdbcType="VARCHAR" property="consigneeAddress" />
      <result column="consignee_email" jdbcType="VARCHAR" property="consigneeEmail" />
      <result column="consignee_money" jdbcType="DOUBLE" property="consigneeMoney" />
      <result column="consignee_time" jdbcType="TIMESTAMP" property="consigneeTime" />
      <result column="consignee_remark" jdbcType="VARCHAR" property="consigneeRemark" />
      <result column="consignee_number" jdbcType="BIGINT" property="consigneeNumber" />
      <result column="consignee_totalAmount" jdbcType="DOUBLE" property="consigneeTotalamount" />
      <result column="consignee_goodsid" jdbcType="BIGINT" property="consigneeGoodsid"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, consignee_name, vip_account_number, consignee_phone, consignee_cellPhone, consignee_zipCode, 
    consignee_address, consignee_email, consignee_money, consignee_time, consignee_remark, 
    consignee_number, consignee_totalAmount
  </sql>
  <select id="selectByExample"  resultMap="BaseResultMap">
    select b.id goodId,b.shopping_price,b.goods_name,a.*
    FROM t_consignee a ,t_goods b
    where a.consignee_goodsid=b.id
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select b.id goodId,b.shopping_price,b.goods_name,a.*
    FROM t_consignee a ,t_goods b
    WHERE a.id=#{id}
    AND a.consignee_goodsid=b.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_consignee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy25.sm.entity.sell.ConsigneeExample">
    delete from t_consignee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy25.sm.entity.sell.Consignee">
    insert into t_consignee (id, consignee_name, vip_account_number, 
      consignee_phone, consignee_cellPhone, consignee_zipCode, 
      consignee_address, consignee_email, consignee_money, 
      consignee_time, consignee_remark, consignee_number, 
      consignee_totalAmount)
    values (#{id,jdbcType=BIGINT}, #{consigneeName,jdbcType=VARCHAR}, #{vipAccountNumber,jdbcType=VARCHAR}, 
      #{consigneePhone,jdbcType=BIGINT}, #{consigneeCellphone,jdbcType=BIGINT}, #{consigneeZipcode,jdbcType=BIGINT}, 
      #{consigneeAddress,jdbcType=VARCHAR}, #{consigneeEmail,jdbcType=VARCHAR}, #{consigneeMoney,jdbcType=DOUBLE}, 
      #{consigneeTime,jdbcType=TIMESTAMP}, #{consigneeRemark,jdbcType=VARCHAR}, #{consigneeNumber,jdbcType=BIGINT}, 
      #{consigneeTotalamount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.qy25.sm.entity.sell.Consignee">
    insert into t_consignee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consigneeName != null">
        consignee_name,
      </if>
      <if test="vipAccountNumber != null">
        vip_account_number,
      </if>
      <if test="consigneePhone != null">
        consignee_phone,
      </if>
      <if test="consigneeCellphone != null">
        consignee_cellPhone,
      </if>
      <if test="consigneeZipcode != null">
        consignee_zipCode,
      </if>
      <if test="consigneeAddress != null">
        consignee_address,
      </if>
      <if test="consigneeEmail != null">
        consignee_email,
      </if>
      <if test="consigneeMoney != null">
        consignee_money,
      </if>
      <if test="consigneeTime != null">
        consignee_time,
      </if>
      <if test="consigneeRemark != null">
        consignee_remark,
      </if>
      <if test="consigneeNumber != null">
        consignee_number,
      </if>
      <if test="consigneeTotalamount != null">
        consignee_totalAmount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="consigneeName != null">
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="vipAccountNumber != null">
        #{vipAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        #{consigneePhone,jdbcType=BIGINT},
      </if>
      <if test="consigneeCellphone != null">
        #{consigneeCellphone,jdbcType=BIGINT},
      </if>
      <if test="consigneeZipcode != null">
        #{consigneeZipcode,jdbcType=BIGINT},
      </if>
      <if test="consigneeAddress != null">
        #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="consigneeEmail != null">
        #{consigneeEmail,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMoney != null">
        #{consigneeMoney,jdbcType=DOUBLE},
      </if>
      <if test="consigneeTime != null">
        #{consigneeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consigneeRemark != null">
        #{consigneeRemark,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNumber != null">
        #{consigneeNumber,jdbcType=BIGINT},
      </if>
      <if test="consigneeTotalamount != null">
        #{consigneeTotalamount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy25.sm.entity.sell.ConsigneeExample" resultType="java.lang.Long">
    select count(*) from t_consignee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_consignee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeName != null">
        consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="record.vipAccountNumber != null">
        vip_account_number = #{record.vipAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneePhone != null">
        consignee_phone = #{record.consigneePhone,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeCellphone != null">
        consignee_cellPhone = #{record.consigneeCellphone,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeZipcode != null">
        consignee_zipCode = #{record.consigneeZipcode,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeAddress != null">
        consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeEmail != null">
        consignee_email = #{record.consigneeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeMoney != null">
        consignee_money = #{record.consigneeMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.consigneeTime != null">
        consignee_time = #{record.consigneeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.consigneeRemark != null">
        consignee_remark = #{record.consigneeRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeNumber != null">
        consignee_number = #{record.consigneeNumber,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeTotalamount != null">
        consignee_totalAmount = #{record.consigneeTotalamount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_consignee
    set id = #{record.id,jdbcType=BIGINT},
      consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      vip_account_number = #{record.vipAccountNumber,jdbcType=VARCHAR},
      consignee_phone = #{record.consigneePhone,jdbcType=BIGINT},
      consignee_cellPhone = #{record.consigneeCellphone,jdbcType=BIGINT},
      consignee_zipCode = #{record.consigneeZipcode,jdbcType=BIGINT},
      consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      consignee_email = #{record.consigneeEmail,jdbcType=VARCHAR},
      consignee_money = #{record.consigneeMoney,jdbcType=DOUBLE},
      consignee_time = #{record.consigneeTime,jdbcType=TIMESTAMP},
      consignee_remark = #{record.consigneeRemark,jdbcType=VARCHAR},
      consignee_number = #{record.consigneeNumber,jdbcType=BIGINT},
      consignee_totalAmount = #{record.consigneeTotalamount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy25.sm.entity.sell.Consignee">
    update t_consignee
    <set>
      <if test="consigneeName != null">
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="vipAccountNumber != null">
        vip_account_number = #{vipAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        consignee_phone = #{consigneePhone,jdbcType=BIGINT},
      </if>
      <if test="consigneeCellphone != null">
        consignee_cellPhone = #{consigneeCellphone,jdbcType=BIGINT},
      </if>
      <if test="consigneeZipcode != null">
        consignee_zipCode = #{consigneeZipcode,jdbcType=BIGINT},
      </if>
      <if test="consigneeAddress != null">
        consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="consigneeEmail != null">
        consignee_email = #{consigneeEmail,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMoney != null">
        consignee_money = #{consigneeMoney,jdbcType=DOUBLE},
      </if>
      <if test="consigneeTime != null">
        consignee_time = #{consigneeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consigneeRemark != null">
        consignee_remark = #{consigneeRemark,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNumber != null">
        consignee_number = #{consigneeNumber,jdbcType=BIGINT},
      </if>
      <if test="consigneeTotalamount != null">
        consignee_totalAmount = #{consigneeTotalamount,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy25.sm.entity.sell.Consignee">
    update t_consignee
    set consignee_name = #{consigneeName,jdbcType=VARCHAR},
      vip_account_number = #{vipAccountNumber,jdbcType=VARCHAR},
      consignee_phone = #{consigneePhone,jdbcType=BIGINT},
      consignee_cellPhone = #{consigneeCellphone,jdbcType=BIGINT},
      consignee_zipCode = #{consigneeZipcode,jdbcType=BIGINT},
      consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      consignee_email = #{consigneeEmail,jdbcType=VARCHAR},
      consignee_money = #{consigneeMoney,jdbcType=DOUBLE},
      consignee_time = #{consigneeTime,jdbcType=TIMESTAMP},
      consignee_remark = #{consigneeRemark,jdbcType=VARCHAR},
      consignee_number = #{consigneeNumber,jdbcType=BIGINT},
      consignee_totalAmount = #{consigneeTotalamount,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>