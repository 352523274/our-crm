<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy25.sm.mapper.PriceadjustformMapper">
  <resultMap id="BaseResultMap" type="com.qy25.sm.entity.goods.Priceadjustform">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="shopping_price" jdbcType="DECIMAL" property="shoppingPrice" />
    <result column="stock" jdbcType="BIGINT" property="stock" />
    <result column="adjusted_market_price" jdbcType="DECIMAL" property="adjustedMarketPrice" />
    <result column="adjusted_shopping_price" jdbcType="DECIMAL" property="adjustedShoppingPrice" />
    <result column="hope_effective_date" jdbcType="TIMESTAMP" property="hopeEffectiveDate" />
    <result column="hope_expiry_date" jdbcType="TIMESTAMP" property="hopeExpiryDate" />
    <result column="adjust_reason" jdbcType="VARCHAR" property="adjustReason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="audit_id" jdbcType="BIGINT" property="auditId" />
    <result column="aduit_status" jdbcType="INTEGER" property="aduitStatus" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_id, goods_name, market_price, shopping_price, stock, adjusted_market_price, 
    adjusted_shopping_price, hope_effective_date, hope_expiry_date, adjust_reason, remark, 
    audit_id, aduit_status, add_time, creator_id, update_time, update_id
  </sql>
  <select id="selectByExample" parameterType="com.qy25.sm.entity.goods.PriceadjustformExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_price_adjust_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_price_adjust_form
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_price_adjust_form
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy25.sm.entity.goods.PriceadjustformExample">
    delete from t_price_adjust_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy25.sm.entity.goods.Priceadjustform">
    insert into t_price_adjust_form (id, goods_id, goods_name, 
      market_price, shopping_price, stock, 
      adjusted_market_price, adjusted_shopping_price, 
      hope_effective_date, hope_expiry_date, 
      adjust_reason, remark, audit_id, 
      aduit_status, add_time, creator_id, 
      update_time, update_id)
    values (#{id,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=DECIMAL}, #{shoppingPrice,jdbcType=DECIMAL}, #{stock,jdbcType=BIGINT}, 
      #{adjustedMarketPrice,jdbcType=DECIMAL}, #{adjustedShoppingPrice,jdbcType=DECIMAL}, 
      #{hopeEffectiveDate,jdbcType=TIMESTAMP}, #{hopeExpiryDate,jdbcType=TIMESTAMP}, 
      #{adjustReason,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{auditId,jdbcType=BIGINT}, 
      #{aduitStatus,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qy25.sm.entity.goods.Priceadjustform">
    insert into t_price_adjust_form
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="shoppingPrice != null">
        shopping_price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="adjustedMarketPrice != null">
        adjusted_market_price,
      </if>
      <if test="adjustedShoppingPrice != null">
        adjusted_shopping_price,
      </if>
      <if test="hopeEffectiveDate != null">
        hope_effective_date,
      </if>
      <if test="hopeExpiryDate != null">
        hope_expiry_date,
      </if>
      <if test="adjustReason != null">
        adjust_reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="auditId != null">
        audit_id,
      </if>
      <if test="aduitStatus != null">
        aduit_status,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="shoppingPrice != null">
        #{shoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=BIGINT},
      </if>
      <if test="adjustedMarketPrice != null">
        #{adjustedMarketPrice,jdbcType=DECIMAL},
      </if>
      <if test="adjustedShoppingPrice != null">
        #{adjustedShoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="hopeEffectiveDate != null">
        #{hopeEffectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hopeExpiryDate != null">
        #{hopeExpiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustReason != null">
        #{adjustReason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="auditId != null">
        #{auditId,jdbcType=BIGINT},
      </if>
      <if test="aduitStatus != null">
        #{aduitStatus,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy25.sm.entity.goods.PriceadjustformExample" resultType="java.lang.Long">
    select count(*) from t_price_adjust_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_price_adjust_form
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.shoppingPrice != null">
        shopping_price = #{record.shoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=BIGINT},
      </if>
      <if test="record.adjustedMarketPrice != null">
        adjusted_market_price = #{record.adjustedMarketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustedShoppingPrice != null">
        adjusted_shopping_price = #{record.adjustedShoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.hopeEffectiveDate != null">
        hope_effective_date = #{record.hopeEffectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hopeExpiryDate != null">
        hope_expiry_date = #{record.hopeExpiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adjustReason != null">
        adjust_reason = #{record.adjustReason,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.auditId != null">
        audit_id = #{record.auditId,jdbcType=BIGINT},
      </if>
      <if test="record.aduitStatus != null">
        aduit_status = #{record.aduitStatus,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_price_adjust_form
    set id = #{record.id,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      shopping_price = #{record.shoppingPrice,jdbcType=DECIMAL},
      stock = #{record.stock,jdbcType=BIGINT},
      adjusted_market_price = #{record.adjustedMarketPrice,jdbcType=DECIMAL},
      adjusted_shopping_price = #{record.adjustedShoppingPrice,jdbcType=DECIMAL},
      hope_effective_date = #{record.hopeEffectiveDate,jdbcType=TIMESTAMP},
      hope_expiry_date = #{record.hopeExpiryDate,jdbcType=TIMESTAMP},
      adjust_reason = #{record.adjustReason,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      audit_id = #{record.auditId,jdbcType=BIGINT},
      aduit_status = #{record.aduitStatus,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy25.sm.entity.goods.Priceadjustform">
    update t_price_adjust_form
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="shoppingPrice != null">
        shopping_price = #{shoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=BIGINT},
      </if>
      <if test="adjustedMarketPrice != null">
        adjusted_market_price = #{adjustedMarketPrice,jdbcType=DECIMAL},
      </if>
      <if test="adjustedShoppingPrice != null">
        adjusted_shopping_price = #{adjustedShoppingPrice,jdbcType=DECIMAL},
      </if>
      <if test="hopeEffectiveDate != null">
        hope_effective_date = #{hopeEffectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hopeExpiryDate != null">
        hope_expiry_date = #{hopeExpiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustReason != null">
        adjust_reason = #{adjustReason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="auditId != null">
        audit_id = #{auditId,jdbcType=BIGINT},
      </if>
      <if test="aduitStatus != null">
        aduit_status = #{aduitStatus,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy25.sm.entity.goods.Priceadjustform">
    update t_price_adjust_form
    set goods_id = #{goodsId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      shopping_price = #{shoppingPrice,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=BIGINT},
      adjusted_market_price = #{adjustedMarketPrice,jdbcType=DECIMAL},
      adjusted_shopping_price = #{adjustedShoppingPrice,jdbcType=DECIMAL},
      hope_effective_date = #{hopeEffectiveDate,jdbcType=TIMESTAMP},
      hope_expiry_date = #{hopeExpiryDate,jdbcType=TIMESTAMP},
      adjust_reason = #{adjustReason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      audit_id = #{auditId,jdbcType=BIGINT},
      aduit_status = #{aduitStatus,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>